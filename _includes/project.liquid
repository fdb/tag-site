---
layout: base
---
<main>
<div class="project-header">
    <img src="{{ main_image }}" class="project-main-image">
  <div class="project-header-inner">
    <h1 class="project-title">{{ title }}</h1>
    <h2 class="project-credits">{{ credits }}</h2>
  </div>
</div>

<section>{{content}}</section>

<div class="masonry-grid">
  {% for image in images %}
    <div class="masonry-brick">
      <img class="masonry-image" src="{{ image }}" alt="{{ title }}">
    </div>
  {% endfor %}
</div>


<div class="project-other">
<section>
<h1>Other Projects</h1>
<div class="figure-grid">
{% for project in collections.project %}
{% if project.data.title != title %}
<a class="figure-link" href="{{ project.url }}">
  <figure>
    <img
      class="project-thumb"
      src="{{ project.data.thumb_image }}"
      alt="{{ project.data.title }}"
    />
    <figcaption>
      <p class="title">{{ project.data.title }}</p>
      <p class="subtitle">{{ project.data.subtitle }}</p>
    </figcaption>
  </figure>
</a>
{% endif %}
{% endfor %}
</div>
</section>
</div>

</main>
<script src="/static/js/masonry.pkgd.min.js">
<script src="/static/js/imagesloaded.pkgd.min.js">
<script>
  function resizeMasonryItem(item){
/* Get the grid object, its row-gap, and the size of its implicit rows */
var grid = document.getElementsByClassName('masonry')[0],
    rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap')),
    rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'));

/*
  * Spanning for any brick = S
  * Grid's row-gap = G
  * Size of grid's implicitly create row-track = R
  * Height of item content = H
  * Net height of the item = H1 = H + G
  * Net height of the implicit row-track = T = G + R
  * S = H1 / T
  */
var rowSpan = Math.ceil((item.querySelector('.masonry-image').getBoundingClientRect().height+rowGap)/(rowHeight+rowGap));

/* Set the spanning as calculated above (S) */
item.style.gridRowEnd = 'span '+rowSpan;
}

function resizeAllMasonryItems(){
// Get all item class objects in one list
var allItems = document.getElementsByClassName('masonry-brick');

/*
  * Loop through the above list and execute the spanning function to
  * each list-item (i.e. each masonry item)
  */
for(var i=0;i<allItems.length;i++){
  resizeMasonryItem(allItems[i]);
}
}

function waitForImages() {
var allItems = document.getElementsByClassName('masonry-brick');
for(var i=0;i<allItems.length;i++){
  imagesLoaded( allItems[i], function(instance) {
    var item = instance.elements[0];
    resizeMasonryItem(item);
  } );
}
}

var masonryEvents = ['load', 'resize'];
masonryEvents.forEach( function(event) {
window.addEventListener(event, resizeAllMasonryItems);
} );

waitForImages();

</script>
